#!/bin/bash

# Get the current sink index
sink_index=$(pactl list sinks | grep -A1 'Sink #' | grep 'Sink #' | awk '{print $3}')

# Set the step size for volume adjustment
step=5

# Function to increase volume
increase_volume() {
  pactl set-sink-volume "$sink_index" "+$step%"
  volume="$(pactl list sinks | grep 'Volume:' | head -n1 | awk '{print $5}')"
  notify-send -i "audio-volume-high-symbolic" "Volume Control +" -h int:value:"$volume"
}

# Function to decrease volume
decrease_volume() {
  pactl set-sink-volume "$sink_index" "-$step%"
  volume="$(pactl list sinks | grep 'Volume:' | head -n1 | awk '{print $5}')"
  notify-send -i "audio-volume-low-symbolic" "Volume Control -" -h int:value:"$volume"
}

# Function to toggle mute/unmute
toggle_mute() {
  pactl set-sink-mute "$sink_index" toggle
  if pactl list sinks | grep -q 'Mute: yes'; then
    notify-send -i "audio-volume-muted-symbolic" "Volume Control X" -a "Volume Control"
  else
    volume="$(pactl list sinks | grep 'Volume:' | head -n1 | awk '{print $5}')"
    notify-send -i "audio-volume-medium-symbolic" "Volume Control âœ“" -h int:value:"$volume" -a "Volume Control" "Current Volume: $volume"
  fi
}

# Parse command line arguments
case "$1" in
  "up") increase_volume ;;
  "down") decrease_volume ;;
  "mute") toggle_mute ;;
  *) echo "Invalid option: $1. Use 'up', 'down', or 'mute'." ;;
esac
  
